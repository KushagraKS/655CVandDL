import os
import cv2
import numpy as np
from skimage.feature import hog
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, confusion_matrix
from joblib import dump

train_path = '/home/kushagra/Desktop/Dataset/Train'
test_path = '/home/kushagra/Desktop/Dataset/Test'

def load_data(data_path):
    images = []
    labels = []
    for label in os.listdir(data_path):
        label_path = os.path.join(data_path, label)
        if os.path.isdir(label_path):
            for img_name in os.listdir(label_path):
                img_path = os.path.join(label_path, img_name)
                img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
                img = cv2.resize(img, (28, 28))
                images.append(img)
                labels.append(int(label))
    return np.array(images), np.array(labels)

X_train, y_train = load_data(train_path)
X_test, y_test = load_data(test_path)

def extract_hog_features(images):
    hog_features = []
    for img in images:
        features = hog(
            img,
            orientations=12,
            pixels_per_cell=(6, 6),
            cells_per_block=(2, 2),
            block_norm='L2-Hys',
            visualize=False
        )
        hog_features.append(features)
    return np.array(hog_features)

X_train_hog = extract_hog_features(X_train)
X_test_hog = extract_hog_features(X_test)

svm = SVC(kernel='linear', C=1.0, gamma='scale')
svm.fit(X_train_hog, y_train)

y_pred = svm.predict(X_test_hog)

print("Overall Accuracy:", accuracy_score(y_test, y_pred))

conf_matrix = confusion_matrix(y_test, y_pred)
for i in range(10):
    digit_accuracy = conf_matrix[i, i] / np.sum(conf_matrix[i, :])
    print(f"Accuracy for digit {i}: {digit_accuracy:.4f}")

dump(svm, '/home/kushagra/Desktop/svm_hog_model_tweaked.joblib')
